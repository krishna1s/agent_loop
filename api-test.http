
### Sample .http file for testing FastAPI endpoints

# 1. Create a new task
POST http://localhost:8002/task
Content-Type: application/json

{
  "message": "I want to test my website login functionality\\ngo to playwright.microsoft.com\\nClick on sign in button\\nEnter email pass word\\nif login succesfull report succes\\nDon't use existing loggedIn account go through email and password flow"
}

###
# 2. Get task status and progress (replace TASK_ID with the actual id from above)
GET http://localhost:8002/task/e2070660-c751-4911-ab6e-5dc6d2583fdd

###
# 3. Provide user input if task is waiting for input (replace TASK_ID)
POST http://localhost:8002/task/e2070660-c751-4911-ab6e-5dc6d2583fdd/input
Content-Type: application/json

{
  "input": "Use my credentials to check the login flow pwtest@puneet0288hotmail.onmicrosoft.com and password XXX"
}



### Screenshot API tests

# 4. Get latest screenshot (PNG)
GET http://localhost:8080/api/screenshot

# 5. Get latest screenshot (base64 JSON)
GET http://localhost:8080/api/screenshot?format=base64

# 6. List all screenshots (metadata)
GET http://localhost:8080/api/screenshots?limit=25

# 7. List all screenshots (with base64)
GET http://localhost:8080/api/screenshots?limit=5&include=base64

###
# 8. Execute a Playwright script (using async run())
# Uses CDP_ENDPOINT env var or defaults to http://127.0.0.1:9222
POST http://localhost:8080/api/execute
Content-Type: application/json

{
  "timeout_ms": 30000,
  "script": """
async def run(page, context, browser, playwright, **kwargs):
    print('Title before:', await page.title())
    await page.goto('https://example.com')
    print('Title after:', await page.title())
    # return any JSON-serializable value
    return {"url": page.url}
"""
}

###
# 9. Execute a Playwright script (body wrapped automatically)
POST http://localhost:8080/api/execute
Content-Type: application/json

{
  "navigate_url": "https://example.com",
  "script": """
print('Current URL is', page.url)
await page.click('text=More information')
print('After click URL:', page.url)
"""
}